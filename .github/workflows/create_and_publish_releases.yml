name: "Create and publish releases"
on:
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  release:
    name: "Create Release"
    runs-on: ubuntu-latest
    if: >-
      ${{ github.event.pull_request.merged == true && (
      contains(github.event.pull_request.labels.*.name, 'patch') ||
      contains(github.event.pull_request.labels.*.name, 'minor') ||
      contains(github.event.pull_request.labels.*.name, 'major') ) }}
    steps:
      - name: Determine release type
        id: release-type
        run: |
          labels=("${{ join(github.event.pull_request.labels.*.name, ' ') }}")

          if [[ "${labels[@]}" == *patch* ]]; then
            echo "::set-output name=RELEASE_TYPE::patch"
          elif [[ "${labels[@]}" == *minor* ]]; then
            echo "::set-output name=RELEASE_TYPE::minor"
          elif [[ "${labels[@]}" == *major* ]]; then
            echo "::set-output name=RELEASE_TYPE::major"
          fi

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup git user
        run: |
          git config user.name "Yash jaiswal"
          git config user.email "jais.yash01@gmail.com"
      - name: Setup NodeJS LTS version
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup the project
        run: yarn install

      - name: Generate production build
        run: yarn build

      - name: Prefix version tag with "v"
        run: yarn config set version-tag-prefix "v"

      - name: Disable Git commit hooks
        run: git config core.hooksPath /dev/null

      # - name: Get next version
      #   id: next-version
      #   run: |
      #     current_version=$(node -p "require('./package.json').version")
      #     if [[ "${{ steps.release-type.outputs.RELEASE_TYPE }}" == "patch" ]]; then
      #       next_version=$(npm version patch --no-git-tag-version)
      #     elif [[ "${{ steps.release-type.outputs.RELEASE_TYPE }}" == "minor" ]]; then
      #       next_version=$(npm version minor --no-git-tag-version)
      #     elif [[ "${{ steps.release-type.outputs.RELEASE_TYPE }}" == "major" ]]; then
      #       next_version=$(npm version major --no-git-tag-version)
      #     fi
      #     # Remove the 'v' prefix if present
      #     next_version=${next_version#v}
      #     echo "VERSION=$next_version" >> $GITHUB_OUTPUT
      #     # Reset the version in package.json
      #     npm version $current_version --no-git-tag-version

      # - name: Bump version in package.json
      #   run: yarn version --new-version ${{ steps.next-version.outputs.VERSION }}

      # - name: Bump version in package.json in dist folder
      #   working-directory: ./dist
      #   run: yarn version --new-version ${{ steps.next-version.outputs.VERSION }} --no-git-tag-version

      - name: Bump version in package.json
        run: yarn version --new-version ${{ steps.release-type.outputs.RELEASE_TYPE }}

      - name: Bump version in package.json in dist folder
        working-directory: ./dist
        run: yarn version --new-version ${{ steps.release-type.outputs.RELEASE_TYPE }} --no-git-tag-version

      - name: Get the package version from package.json
        uses: tyankatsu0105/read-package-version-actions@5aad2bb630a577ee4255546eb3ee0593df68f6ca
        id: package-version

      - name: Create a new version release commit
        uses: EndBug/add-and-commit@050a66787244b10a4874a2a5f682130263edc192
        with:
          message: "New version release"

      - name: Push the commit to main
        uses: ad-m/github-push-action@492de9080c3179a3187bd456763f988f9a06e196
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Create a release draft on release
        uses: release-drafter/release-drafter@ac463ffd9cc4c6ad5682af93dc3e3591c4657ee3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.package-version.outputs.version }}
          publish: true

      - name: Publish the package on NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          access: "public"
          token: ${{ secrets.NPM_TOKEN }}
